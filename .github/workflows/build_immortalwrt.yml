name: 🚀 编译 immortalwrt(Build immortalwrt)

on:
  workflow_dispatch:
    inputs:
      owner:
        description: "openWRT 仓库的拥有者 (Owner of openWRT repo)"
        type: string
        required: true
        default: "xmh1211"
      repo:
        description: "openWRT 仓库的名字 (Name of openWRT repo)"
        type: string
        required: true
        default: "immortalwrt"
      branch:
        description: "openWRT 仓库的分支 (Branch of openWRT repo)"
        type: string
        required: true
        default: "master"
      multithreading:
        description: "开启多线程编译 (Enable multithreading build)"
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: 🚀 编译 (Build)
    steps:
      - name: 下载编译所需的依赖 (Install the software packages required for compilation)
        run: |
          sudo apt-get update
          sudo apt-get install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
        
      - name: 克隆当前仓库 (Clone current repo)
        uses: actions/checkout@v4
        
      - name: 克隆 openWRT 仓库 (Clone openWRT repo)
        uses: actions/checkout@v4
        with:
          repository: "${{inputs.owner}}/${{inputs.repo}}"
          ref: ${{inputs.branch}}
          path: openWRT
        
      - name: 复制当前仓库的配置文件到 openWRT 仓库  (Copy current repo config to openWRT repo)
        run: cp -f diy.sh openWRT/
        
      - name: 运行 diy.sh (Run diy.sh)
        working-directory: openWRT
        run: |
          chmod +x diy.sh
          ./diy.sh
        
      - name: 更新并下载软件包
        working-directory: openWRT
        run: ./scripts/feeds update -a && ./scripts/feeds install -a
        
      - name: 更新默认配置文件
        working-directory: openWRT
        run: make defconfig
        
      - name: 下载DI库
        working-directory: openWRT
        run: |
          make download -j1 V=s
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
        
      - name: 多线程编译 openWRT (Build openWRT multithreading)
        if: ${{inputs.multithreading == true}}
        working-directory: openWRT
        run: make -j$(nproc) V=s
        
      - name: 单线程编译 openWRT (Build openWRT single thread)
        if: ${{inputs.multithreading == false}}
        working-directory: openWRT
        run: make -j1 V=s
        
      - name: 上传编译结果到 Artifact (Upload build result to Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: openWRT-build-result
          path: openWRT/bin/targets
